{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Valo-API","text":"<p>Welcome to the Valo-API documentation!</p>"},{"location":"#overview","title":"Overview","text":"<p>Valo-API is a small project designed to provide easy access to various endpoints for retrieving data related to Valorant matches. This project is not affiliated with Riot Games and is not an official API and uses HenrikDev API internally.</p>"},{"location":"#authentication","title":"Authentication","text":"<p>As we are using HenrikDev API, you'll need your own API key to use this project. You can get your API key by visiting HenrikDev API and joining their discord.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Overlay for displaying player rank and record</li> <li>Retrieve player statistics (rank, leaderboard-rank and stats)</li> <li>Access match history (record and last-party-members)</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>To use the Valo-API, you can access the various endpoints provided in the documentation. The endpoints are designed to be used in chatbot commands, overlays, or other applications to display Valorant-related data.</p>"},{"location":"api-reference/overview/","title":"API Reference Overview","text":"<p>Welcome to the API Reference for Valo-API. This section provides detailed information about the available endpoints, request parameters, and response formats.</p>"},{"location":"api-reference/overview/#base-url","title":"Base URL","text":"<p>The base URL for the Valo-API is:</p> <pre><code>https://valo-api.vercel.app\n</code></pre>"},{"location":"api-reference/overview/#endpoints","title":"Endpoints","text":"<p>The Valo-API provides the following endpoints:</p> <ul> <li><code>/rank</code></li> <li><code>/checkrank</code></li> <li><code>/leaderboard-rank</code></li> <li><code>/stats</code></li> <li><code>/checkstats</code></li> <li><code>/record</code></li> <li><code>/last-match/party-members</code></li> </ul>"},{"location":"api-reference/overview/#request-parameters","title":"Request Parameters","text":"<p>Each endpoint may require specific parameters. Refer to the endpoint documentation for detailed information on required and optional parameters.</p>"},{"location":"api-reference/overview/#response-formats","title":"Response Formats","text":"<p>Responses are typically in plain string format to be shown in twitch chat. If you're encountering an issue with 401 Unauthorized, please refer to the Authentication section and make sure you're using a valid API key.</p> <p>For more detailed information, please refer to the specific endpoint documentation.</p>"},{"location":"api-reference/rank/","title":"Rank Related API Endpoints","text":"<p>This section provides detailed information about the <code>/rank</code>, <code>/checkrank</code> and <code>leaderboard-rank</code> endpoints, which are used to retrieve the current rank, ranking points and leaderboard rank (if applicable) of a specified Valorant player.</p>"},{"location":"api-reference/rank/#rank-endpoint","title":"<code>/rank</code> Endpoint","text":""},{"location":"api-reference/rank/#description","title":"Description","text":"<p>The <code>/rank</code> endpoint provides the current rank and ranking points of a specified Valorant player. The API fetches the player's rank and tier details based on their username, tag, and region.</p>"},{"location":"api-reference/rank/#http-method","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/rank/#endpoint","title":"Endpoint","text":"<p><code>/rank</code></p>"},{"location":"api-reference/rank/#request-parameters","title":"Request Parameters","text":"Parameter Type Description Example <code>name</code> string The Valorant username of the player <code>PlayerName</code> <code>tag</code> string The Valorant tag of the player <code>1234</code> <code>region</code> string The region of the player (e.g., <code>na</code>, <code>eu</code>, <code>ap</code>) <code>na</code> <code>apiKey</code> string Your API key obtained from HenrikDev API <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>"},{"location":"api-reference/rank/#response","title":"Response","text":"<ul> <li> <p>200 OK   Returns a plain text summary of the player's current rank and ranking points.</p> <p>Example Success Response: <code>Current Rank: Immortal1 - 45 RR.</code></p> </li> <li> <p>400 Bad Request   Returns a plain text error message if required parameters (<code>name</code>, <code>tag</code>, <code>region</code>) are missing.</p> <p>Example Error Response: <code>Error: Missing parameters. Ensure username, tag, and region are provided.</code></p> </li> <li> <p>500 Internal Server Error   Returns a plain text error message if an error occurs while fetching data from the external API (e.g., invalid credentials, player not found, etc.).   Example Error Response: <code>Error Message from API</code></p> </li> </ul>"},{"location":"api-reference/rank/#command-setup","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/rank</code> endpoint in a chatbot command. Replace <code>&lt;username&gt;</code>, <code>&lt;tag&gt;</code>, <code>&lt;region&gt;</code>, and <code>&lt;apiKey&gt;</code> with the appropriate values.</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!addcom !rank $(urlfetch https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd add !rank $(customapi https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!addcmd !rank $(customapi https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!command add !rank {readapi.https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!editcom !rank $(urlfetch https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd edit !rank $(customapi https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!editcmd !rank $(customapi https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!command edit !rank {readapi.https://valo-api.vercel.app/rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre>"},{"location":"api-reference/rank/#command-usage","title":"Command Usage","text":"<p>To use the <code>!rank</code> command in your chatbot for the configured user, you can type the following command in your chat:</p> <pre><code>!rank\n</code></pre>"},{"location":"api-reference/rank/#checkrank-endpoint","title":"<code>/checkrank</code> Endpoint","text":""},{"location":"api-reference/rank/#description_1","title":"Description","text":"<p>The <code>/checkrank</code> endpoint provides the current and peak rank of a specified Valorant player. This API extracts details based on a single query parameter (<code>q</code>) containing the player's username, tag, and region.</p>"},{"location":"api-reference/rank/#http-method_1","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/rank/#endpoint_1","title":"Endpoint","text":"<p><code>/checkrank</code></p>"},{"location":"api-reference/rank/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Description Example <code>q</code> string A single string that contains the player's username, tag, and region, separated by spaces. The tag can be with or without <code>#</code> symbol at the start. <code>PlayerName 1234 na</code> <code>apiKey</code> string Your API key obtained from HenrikDev API. <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>"},{"location":"api-reference/rank/#q-format","title":"<code>q</code> Format","text":"<ul> <li>The <code>q</code> query parameter should contain three components:</li> <li>Username: The player's in-game username (can contain spaces).</li> <li>Tag: The player's tag (usually a 4-5 digit number or text, without <code>#</code>).</li> <li>Region: The player's region (e.g., <code>na</code>, <code>eu</code>).</li> </ul>"},{"location":"api-reference/rank/#example-q-parameter","title":"Example <code>q</code> Parameter","text":"<pre><code>GET /checkrank?q=PlayerName 1234 na&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n</code></pre> <p>This <code>q</code> value will be split as:</p> <ul> <li>Username: PlayerName</li> <li>Tag: 1234</li> <li>Region: na</li> </ul>"},{"location":"api-reference/rank/#response_1","title":"Response","text":"<ul> <li>200 OK   Returns a plain text summary of the player's current and peak rank.</li> </ul> <p>Example Success Response:   Current Rank: Platinum2 - 0 RR. Peak Rank: Platinum3 in e8a3 (Peak might be incorrect)</p> <ul> <li> <p>400 Bad Request   Returns a plain text error message if the required parameters (<code>username</code>, <code>tag</code>, and <code>region</code>) are missing or invalid.</p> <p>Example Error Response:   Error: Missing or invalid parameters. Ensure username, tag, and region are provided.</p> </li> <li> <p>500 Internal Server Error   Returns a plain text error message if there is an issue with fetching the data from the external API or any other error occurs.</p> <p>Example Error Response:   Error occurred:"},{"location":"api-reference/rank/#example-request","title":"Example Request","text":"<pre><code>GET /checkrank?q=Player%20123 456 na&amp;apiKey=your-api-key\n**Example Successful Response**: Current Rank: Immortal1 - 45 RR. Peak Rank: Immortal3 in Episode 6 (Peak might be incorrect)\n</code></pre>"},{"location":"api-reference/rank/#error-handling","title":"Error Handling","text":"<ul> <li>If the <code>q</code> parameter is missing, empty, or invalid, the API returns an error message asking for the proper input format.</li> <li>If an error occurs while calling the external API, the response returns the error message from the external API.</li> </ul>"},{"location":"api-reference/rank/#command-setup_1","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/checkrank</code> endpoint in a chatbot command. Replace <code>&lt;apiKey&gt;</code> with the appropriate values and <code>querystring</code> or <code>q</code> value is entered while running the command, see usage</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabot <pre><code>!addcom !checkrank $(urlfetch https://valo-api.vercel.app/checkrank?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd add !checkrank $(customapi https://valo-api.vercel.app/checkrank?q=${1:}&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!addcmd !checkrank $(customapi https://valo-api.vercel.app/checkrank?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabot <pre><code>!editcom !checkrank $(urlfetch https://valo-api.vercel.app/checkrank?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd edit !checkrank $(customapi https://valo-api.vercel.app/checkrank?q=${1:}&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!editcmd !checkrank $(customapi https://valo-api.vercel.app/checkrank?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre>"},{"location":"api-reference/rank/#command-usage_1","title":"Command Usage","text":"<p>To use the <code>!checkrank</code> command in your chatbot, you can type the following command in your chat:</p> <pre><code>!checkrank &lt;username&gt; &lt;tag&gt; &lt;region&gt;\n</code></pre> <p>For example:</p> <pre><code>!checkrank PlayerName 1234 na\n!checkrank PlayerName #1234 na\n// Example for a username with spaces\n!checkrank Player Name 1234 eu\n!checkrank Player Name #1234 eu\n</code></pre>"},{"location":"api-reference/rank/#leaderboard-rank-endpoint","title":"<code>/leaderboard-rank</code> Endpoint","text":""},{"location":"api-reference/rank/#description_2","title":"Description","text":"<p>The <code>/leaderboard-rank</code> endpoint retrieves both the current rank and leaderboard position of a specified Valorant player. It provides information on the player's rank, ranking in tier, leaderboard rank, and win rate for the current season.</p>"},{"location":"api-reference/rank/#http-method_2","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/rank/#endpoint_2","title":"Endpoint","text":"<p><code>/leaderboard-rank</code></p>"},{"location":"api-reference/rank/#request-parameters_2","title":"Request Parameters","text":"Parameter Type Description Example <code>name</code> string The Valorant username of the player <code>PlayerName</code> <code>tag</code> string The Valorant tag of the player <code>1234</code> <code>region</code> string The region of the player (e.g., <code>na</code>, <code>eu</code>, <code>ap</code>) <code>na</code> <code>apiKey</code> string Your API key obtained from HenrikDev API <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>"},{"location":"api-reference/rank/#example-request_1","title":"Example Request","text":"<pre><code>GET /leaderboard-rank?name=PlayerName&amp;tag=1234&amp;region=na&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n</code></pre>"},{"location":"api-reference/rank/#response_2","title":"Response","text":"<ul> <li>200 OK   Returns a plain text summary of the player's current rank, leaderboard rank, and win rate.</li> </ul> <p>Example Success Response:   Current Rank: Immortal3 - 392 RR | Leaderboard Rank: 502 with 71 wins out of 151 games (47.02% wr)</p> <ul> <li> <p>400 Bad Request   Returns a plain text error message if required parameters (<code>name</code>, <code>tag</code>, <code>region</code>) are missing.</p> <pre><code>**Example Error Response:**\n`Error: Missing parameters. Ensure username, tag, and region are provided.`\n</code></pre> </li> <li> <p>500 Internal Server Error    Returns a plain text error message if an error occurs while fetching data from the external API (e.g., invalid credentials, player not found, etc.).   Example Error Response: <code>Error Message from API</code></p> </li> </ul>"},{"location":"api-reference/rank/#command-setup_2","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/leaderboard-rank</code> endpoint in a chatbot command. Replace <code>&lt;username&gt;</code>, <code>&lt;tag&gt;</code>, <code>&lt;region&gt;</code>, and <code>&lt;apiKey&gt;</code> with the appropriate values. This command is best used for players ranked in the Immortal and Radiant tiers.</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!addcom !leaderboardrank $(urlfetch https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd add !leaderboardrank $(customapi https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!addcmd !leaderboardrank $(customapi https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!command add !leaderboardrank {readapi.https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!editcom !leaderboardrank $(urlfetch https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd edit !leaderboardrank $(customapi https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!editcmd !leaderboardrank $(customapi https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!command edit !leaderboardrank {readapi.https://valo-api.vercel.app/leaderboard-rank?name=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre>"},{"location":"api-reference/rank/#command-usage_2","title":"Command Usage","text":"<p>To use the <code>!leaderboardrank</code> command in your chatbot for the configured user, you can type the following command in your chat:</p> <pre><code>!leaderboardrank\n</code></pre>"},{"location":"api-reference/rank/#additional-notes","title":"Additional Notes","text":"<ul> <li>The API uses the HenrikDev API internally to fetch the player's rank and leaderboard details.</li> <li>Ensure that you have a valid API key to access the endpoints.</li> <li>The API responses are in plain text format suitable for chatbot commands.</li> <li>The API may return error messages if the required parameters are missing or if there are issues with the external API.</li> <li>For detailed error handling and response formats, refer to the specific endpoint documentation.</li> </ul>"},{"location":"api-reference/rank/#external-api-used","title":"External API Used","text":"<ul> <li><code>https://api.henrikdev.xyz/valorant/v2/mmr</code> - <code>/rank</code>, <code>/checkrank</code> and <code>/leaderboard-rank</code> endpoints</li> <li><code>https://api.henrikdev.xyz/valorant/v3/leaderboard</code> - <code>/leaderboard-rank</code> endpoint</li> </ul>"},{"location":"api-reference/record/","title":"Record Related API Endpoints","text":""},{"location":"api-reference/record/#record-endpoint","title":"<code>/record</code> Endpoint","text":""},{"location":"api-reference/record/#description","title":"Description","text":"<p>The <code>/record</code> endpoint provides information about the user's Valorant MMR history during the current stream. It calculates wins, losses, draws, and RR (Rank Rating) changes based on the stream's start time.</p>"},{"location":"api-reference/record/#http-method","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/record/#endpoint","title":"Endpoint","text":"<p><code>/record</code></p>"},{"location":"api-reference/record/#request-parameters","title":"Request Parameters","text":"Parameter Type Description Example <code>channel</code> String The Twitch channel name of the streamer. <code>Streamer123</code> <code>ign</code> String The in-game name of the Valorant player. <code>PlayerName</code> <code>tag</code> String The tagline associated with the player's in-game name, excluding the <code>#</code> symbol. <code>1234</code> <code>region</code> String The region of the player's Valorant account (e.g., <code>na</code>, <code>eu</code>). <code>na</code> <code>apiKey</code> String Your API key obtained from HenrikDev API <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>"},{"location":"api-reference/record/#example-request","title":"Example Request","text":"<pre><code>GET /record?channel=Streamer123&amp;ign=PlayerName&amp;tag=1234&amp;region=na&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n</code></pre>"},{"location":"api-reference/record/#example-response","title":"Example Response","text":"<pre><code>Wins: 3, Losses: 2, Draws: 1 | RR change: +45 RR this stream\n</code></pre>"},{"location":"api-reference/record/#command-setup","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/record</code> endpoint in various chatbot commands. Replace the placeholders with actual values.</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabot <pre><code>!addcom !record $(urlfetch https://valo-api.vercel.app/record?channel=$(channel)&amp;ign=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;your-api-key&gt;)\n</code></pre> <pre><code>!cmd add !record $(customapi https://valo-api.vercel.app/record?channel=${channel}&amp;ign=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;your-api-key&gt;)\n</code></pre> <pre><code>!addcmd !record $(customapi https://valo-api.vercel.app/record?channel=$(channel)&amp;ign=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;your-api-key&gt;)\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabot <pre><code>!editcom !record $(urlfetch https://valo-api.vercel.app/record?channel=$(channel)&amp;ign=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;your-api-key&gt;)\n</code></pre> <pre><code>!cmd edit !record $(customapi https://valo-api.vercel.app/record?channel=${channel}&amp;ign=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;your-api-key&gt;)\n</code></pre> <pre><code>!editcmd !record $(customapi https://valo-api.vercel.app/record?channel=$(channel)&amp;ign=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;your-api-key&gt;)\n</code></pre>"},{"location":"api-reference/record/#command-usage","title":"Command Usage","text":"<ul> <li><code>!record</code> - Retrieves the user's Valorant MMR history during the current stream.</li> <li>Replace <code>&lt;username&gt;</code>, <code>&lt;tag&gt;</code>, <code>&lt;region&gt;</code>, and <code>&lt;your-api-key&gt;</code> with the appropriate values.</li> <li><code>$(channel)/${channel}</code> is a bot variable that automatically fetches the channel name. Which is in turn used to calculate uptime, stream start time, etc. for showing accurate MMR history.</li> </ul>"},{"location":"api-reference/record/#additional-notes","title":"Additional Notes","text":"<ul> <li>The API uses the HenrikDev API internally to fetch the player's match details.</li> <li>Ensure that you have a valid API key to access the endpoints.</li> <li>The API responses are in plain text format suitable for chatbot commands.</li> <li>For detailed error handling and response formats, refer to the specific endpoint documentation.</li> </ul>"},{"location":"api-reference/record/#external-api-used","title":"External API Used","text":"<ul> <li>https://api.henrikdev.xyz/valorant/v2/mmr-history - HenrikDev API for fetching mmr-history details.</li> </ul>"},{"location":"api-reference/record/#limitations","title":"Limitations","text":"<ul> <li>The <code>!record</code> command assumes that every game with negative RR is a loss and any game with &gt;7 RR is a win. Anything in between is considered a draw. While this works 98% of the time, this logic is still flawed and shall be improved in the future.</li> <li>Additionally, it can only see 20 games worth of data at maximum.</li> </ul>"},{"location":"api-reference/stats/","title":"Stats Related API Endpoints","text":"<p>This section provides detailed information about the <code>/stats</code>, <code>/checkstats</code> and <code>/party-members</code> endpoints, which are used to retrieve player statistics and party members of a specified Valorant player.</p>"},{"location":"api-reference/stats/#stats-endpoint","title":"<code>/stats</code> Endpoint","text":""},{"location":"api-reference/stats/#description","title":"Description","text":"<p>The <code>/stats</code> endpoint is used to retrieve the player statistics of a specified Valorant player. It returns a summary of the player's stats for the last match and an aggregate summary of their last available 5 matches.</p>"},{"location":"api-reference/stats/#http-method","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/stats/#endpoint","title":"Endpoint","text":"<p><code>/stats</code></p>"},{"location":"api-reference/stats/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description username string Yes The Valorant player name to retrieve statistics for. tag string Yes The Valorant player tag to retrieve statistics for. region string Yes The region of the Valorant player. apiKey string Yes Your API key obtained from HenrikDev API. <p>Note: <code>tag</code> should be provided without the <code>#</code> symbol at the start.</p>"},{"location":"api-reference/stats/#example-request","title":"Example Request","text":"<pre><code>GET /stats?username=playername&amp;tag=1234&amp;region=na&amp;apiKey=yourapikey\n</code></pre>"},{"location":"api-reference/stats/#response","title":"Response","text":"<ul> <li>200 OK</li> </ul> <p>Returns a summary of the player's stats for the last match and an aggregate summary of their last available matches.</p> <pre><code>  **Example Success Response:**\n  ```plaintext\n  Last Match Stats: Agent \u2013 Jett | K/D/A \u2013 20/10/5 | ACS \u2013 250 | ADR \u2013 150 | DD\u0394 \u2013 100 | HS% \u2013 25.00% | Combined Stats (Last 5 Matches): K/D/A \u2013 100/50/25 | ACS \u2013 245 | ADR \u2013 148 | DD\u0394 \u2013 90 | HS% \u2013 24.50%\n  ```\n\n  **Explanation of the Fields:**\n\n      - Last Match Stats:\n          - Agent: The agent the player used in the last match.\n          - K/D/A: The player's kills, deaths, and assists in the last match.\n          - ACS: Average combat score for the player in the last match.\n          - ADR: Average damage per round in the last match.\n          - DD\u0394 (Damage Delta): Difference between damage made and damage received per round.\n          - HS%: Headshot percentage for the last match.\n      - Combined Stats:\n          - Shows aggregated statistics across all available matches.\n          - K/D/A: Combined kills, deaths, and assists from the last available matches.\n          - ACS: Average combat score across the last available matches.\n          - ADR: Average damage per round across all matches.\n          - DD\u0394 (Damage Delta): Combined damage delta across all matches.\n          - HS%: Average headshot percentage across all matches.\n</code></pre> <ul> <li>400 Bad Request</li> </ul> <p>Returns an error if required parameters (username, tag, or region) are missing or invalid.</p> <p>Example Error Response:   Error: Missing parameters. Ensure username, tag, and region are provided.</p> <ul> <li>500 Internal Server Error</li> </ul> <p>Returns an error if there is an issue fetching or parsing the match data.</p> <p>Example Error Response:   Failed to parse match stats: <code>&lt;Error Message from API&gt;</code></p>"},{"location":"api-reference/stats/#command-setup","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/stats</code> endpoint in a chatbot command. Replace <code>&lt;username&gt;</code>, <code>&lt;tag&gt;</code>, <code>&lt;region&gt;</code>, and <code>&lt;apiKey&gt;</code> with the appropriate values.</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!addcom !stats $(urlfetch https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd add !stats $(customapi https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <p>```bash !addcmd !stats $(customapi https://valo-api.vercel.app/stats?username=&amp;tag=&amp;region=&amp;apiKey) <pre><code>!command add !stats {readapi.https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!editcom !stats $(urlfetch https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd edit !stats $(customapi https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!editcmd !stats $(customapi https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey)\n</code></pre> <pre><code>!command edit !stats {readapi.https://valo-api.vercel.app/stats?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre>"},{"location":"api-reference/stats/#command-usage","title":"Command Usage","text":"<p>To use the <code>!stats</code> command in your chatbot for the configured user, you can type the following in your chat:</p> <pre><code>!stats\n</code></pre>"},{"location":"api-reference/stats/#checkstats-endpoint","title":"<code>/checkstats</code> Endpoint","text":""},{"location":"api-reference/stats/#description_1","title":"Description","text":"<p>The <code>/checkstats</code> endpoint is similar to the <code>/stats</code> endpoint but it takes in query parameters in a different format. It is used to retrieve the player statistics of a specified Valorant player. It returns a summary of the player's stats for the last match and an aggregate summary of their last available 5 matches.</p>"},{"location":"api-reference/stats/#http-method_1","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/stats/#endpoint_1","title":"Endpoint","text":"<p><code>/checkstats</code></p>"},{"location":"api-reference/stats/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Description Example <code>q</code> String A single string that combines the player's username, tag, and region, separated by spaces. <code>PlayerName 1234 na</code> <code>apiKey</code> String Your API Key for HenrikDev API. <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>"},{"location":"api-reference/stats/#q-format","title":"<code>q</code> Format","text":"<ul> <li>The <code>q</code> query parameter should contain three components:</li> <li>Username: The player's in-game username (can contain spaces).</li> <li>Tag: The player's tag (usually a 4-5 digit number or text, without <code>#</code>).</li> <li>Region: The player's region (e.g., <code>na</code>, <code>eu</code>).</li> </ul>"},{"location":"api-reference/stats/#example-q-parameter","title":"Example <code>q</code> Parameter","text":"<pre><code>GET /checkrank?q=PlayerName 1234 na&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n</code></pre> <p>This <code>q</code> value will be split as:</p> <ul> <li>Username: PlayerName</li> <li>Tag: 1234</li> <li>Region: na</li> </ul>"},{"location":"api-reference/stats/#response_1","title":"Response","text":"<ul> <li>200 OK</li> </ul> <p>Returns a summary of the player's stats for the last match and an aggregate summary of their last available matches.</p> <ul> <li>If valid data is found, the response will include:<ul> <li>The last match stats of the player.</li> <li>A summary of combined stats for all available matches.</li> </ul> </li> </ul> <p>Response Example:</p> <pre><code>Last Match Stats: Agent \u2013 Jett | K/D/A \u2013 20/10/5 | ACS \u2013 245 | ADR \u2013 145 | DD\u0394 \u2013 15 | HS% \u2013 22.45% || Combined Stats (Last 5 Matches): K/D/A \u2013 80/50/20 | ACS \u2013 230 | ADR \u2013 140 | DD\u0394 \u2013 10 | HS% \u2013 21.34%\n</code></pre> <ul> <li>400 Bad Request</li> </ul> <p>Returns an error if required parameters are missing or invalid.</p> <p>Error Response Example:</p> <pre><code>Error: Missing or invalid parameters. Ensure username, tag, and region are provided.\n</code></pre> <ul> <li>500 Internal Server Error</li> </ul> <p>Returns an error if there is an issue fetching or parsing the match data.</p> <p>Error Response Example:</p> <pre><code>Failed to parse match stats: &lt;Error Message from API&gt;\n</code></pre>"},{"location":"api-reference/stats/#command-setup_1","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/checkstats</code> endpoint in a chatbot command. Replace <code>&lt;apiKey&gt;</code> with the appropriate value and <code>querystring</code> or <code>q</code> value is entered while calling the command, see usage</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabot <pre><code>!addcom !checkstats $(urlfetch https://valo-api.vercel.app/checkstats?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd add !checkstats $(customapi https://valo-api.vercel.app/checkstats?q=${1:}&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!addcmd !checkstats $(customapi https://valo-api.vercel.app/checkstats?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabot <pre><code>!editcom !checkstats $(urlfetch https://valo-api.vercel.app/checkstats?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd edit !checkstats $(customapi https://valo-api.vercel.app/checkstats?q=${1:}&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!editcmd !checkstats $(customapi https://valo-api.vercel.app/checkstats?q=$(querystring)&amp;apiKey=&lt;apiKey&gt;)\n</code></pre>"},{"location":"api-reference/stats/#command-usage_1","title":"Command Usage","text":"<p>To use the <code>!checkstats</code> command in your chatbot, you can type the following in your chat:</p> <pre><code>!checkstats &lt;username&gt; &lt;tag&gt; &lt;region&gt;\n</code></pre> <p>For example:</p> <pre><code>!checkstats PlayerName 1234 na\n!checkstats PlayerName #1234 na\n// Example for a username with spaces\n!checkstats Player Name 1234 eu\n!checkstats Player Name #1234 eu\n</code></pre>"},{"location":"api-reference/stats/#party-members-endpoint","title":"<code>/party-members</code> Endpoint","text":""},{"location":"api-reference/stats/#description_2","title":"Description","text":"<p>The <code>/party-members</code> endpoint is used to retrieve the party members of a specified Valorant player. It returns a list of the player's party members in the last match.</p>"},{"location":"api-reference/stats/#http-method_2","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"api-reference/stats/#endpoint_2","title":"Endpoint","text":"<p><code>/last-match/party-members</code></p>"},{"location":"api-reference/stats/#request-parameters_2","title":"Request Parameters","text":"Parameter Type Description Example username string The Valorant player name to retrieve party members for. <code>playername</code> tag string The Valorant player tag to retrieve party members for. <code>1234</code> region string The region of the Valorant player. <code>na</code> apiKey string Your API key obtained from HenrikDev API. <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code> <p>Note: <code>tag</code> should be provided without the <code>#</code> symbol at the start.</p>"},{"location":"api-reference/stats/#example-request_1","title":"Example Request","text":"<pre><code>GET /party-members?username=playername&amp;tag=1234&amp;region=na&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n</code></pre>"},{"location":"api-reference/stats/#response_2","title":"Response","text":"<ul> <li>200 OK</li> </ul> <p>Returns a list of the player's party members in the last match.</p> <pre><code>  **Example Success Response:**\n  ```plaintext\n  Party Members: Player1, Player2, Player3\n  // If the player was solo in the last match:\n  No party members found\n  ```\n</code></pre> <ul> <li>400 Bad Request</li> </ul> <p>Returns an error if required parameters (username, tag, or region) are missing or invalid.</p> <pre><code>    **Example Error Response:**\n    Error: Missing parameters. Ensure username, tag, and region are provided.\n</code></pre> <ul> <li>500 Internal Server Error</li> </ul> <p>Returns an error if there is an issue fetching or parsing the match data.</p> <pre><code>    **Example Error Response:**\n    Failed to parse party members: `&lt;Error Message from API&gt;`\n</code></pre>"},{"location":"api-reference/stats/#command-setup_2","title":"Command Setup","text":"<p>Below are examples of how to use the <code>/last-match/party-members</code> endpoint in a chatbot command. Replace <code>&lt;username&gt;</code>, <code>&lt;tag&gt;</code>, <code>&lt;region&gt;</code>, and <code>&lt;apiKey&gt;</code> with the appropriate values.</p> <p>To add a new command in your chatbot, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!addcom !party $(urlfetch https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd add !party $(customapi https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!addcmd !party $(customapi https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey)\n</code></pre> <pre><code>!command add !party {readapi.https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre> <p>To edit an existing command, use the following syntax:</p> NightbotStreamElementsFossabotStreamlabs Chatbot <pre><code>!editcom !party $(urlfetch https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!cmd edit !party $(customapi https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;)\n</code></pre> <pre><code>!editcmd !party $(customapi https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey)\n</code></pre> <pre><code>!command edit !party {readapi.https://valo-api.vercel.app/last-match/party-members?username=&lt;username&gt;&amp;tag=&lt;tag&gt;&amp;region=&lt;region&gt;&amp;apiKey=&lt;apiKey&gt;}\n</code></pre>"},{"location":"api-reference/stats/#command-usage_2","title":"Command Usage","text":"<p>To use the <code>!party</code> command in your chatbot for the configured user, you can type the following in your chat:</p> <pre><code>!party\n</code></pre>"},{"location":"api-reference/stats/#additional-notes","title":"Additional Notes","text":"<ul> <li>The API uses the HenrikDev API internally to fetch the player's stats and details.</li> <li>Ensure that you have a valid API key to access the endpoints.</li> <li>The API responses are in plain text format suitable for chatbot commands.</li> <li>The API may return error messages if the required parameters are missing or if there are issues with the external API.</li> <li>For detailed error handling and response formats, refer to the specific endpoint documentation.</li> </ul>"},{"location":"api-reference/stats/#external-api-used","title":"External API Used","text":"<ul> <li>https://api.henrikdev.xyz/valorant/v3/matches - HenrikDev API for fetching Valorant match data. Used in the <code>/checkstats</code>, <code>/stats</code> and <code>/party-members</code> endpoints.</li> </ul>"},{"location":"overlay-reference/rank-record/","title":"Rank-Record Overlay","text":""},{"location":"overlay-reference/rank-record/#overlaysrank-record-endpoint","title":"<code>/overlays/rank-record</code> Endpoint","text":""},{"location":"overlay-reference/rank-record/#description","title":"Description","text":"<p>The Rank-Record overlay provides information about the user's Valorant Rank and MMR history during the current stream. It calculates wins, losses, draws, and RR (Rank Rating) changes based on the stream's start time.</p>"},{"location":"overlay-reference/rank-record/#http-method","title":"HTTP Method","text":"<p><code>GET</code></p>"},{"location":"overlay-reference/rank-record/#endpoint","title":"Endpoint","text":"<p><code>/overlays/rank-record</code></p>"},{"location":"overlay-reference/rank-record/#request-parameters","title":"Request Parameters","text":"Parameter Type Description Example <code>channel</code> String The Twitch channel name of the streamer. <code>Streamer123</code> <code>name</code> String The in-game name of the Valorant player. <code>PlayerName</code> <code>tag</code> String The tagline associated with the player's in-game name, excluding the <code>#</code> symbol. <code>1234</code> <code>region</code> String The region of the player's Valorant account (e.g., <code>na</code>, <code>eu</code>). <code>na</code> <code>apiKey</code> String Your API key obtained from HenrikDev API <code>HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>"},{"location":"overlay-reference/rank-record/#example-request","title":"Example Request","text":"<pre><code>GET /overlays/rank-record?channel=Streamer123&amp;name=PlayerName&amp;tag=1234&amp;region=na&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n</code></pre>"},{"location":"overlay-reference/rank-record/#example-responses","title":"Example Responses","text":"<ul> <li>When the player's rank and record are available:</li> </ul> <ul> <li>When the player's rank and record are not available:</li> </ul> <ul> <li>When the player's rank is available but the record is not (when the stream isn't live):</li> </ul>"},{"location":"overlay-reference/rank-record/#overlay-setup","title":"Overlay Setup","text":"<p>To add the Rank-Record overlay to your stream, follow these steps:</p> <ol> <li>Create a new browser source in your streaming software (e.g., OBS Studio, StreamLabs OBS).</li> <li>Set the URL of the browser source to <code>https://valo-api.vercel.app/overlays/rank-record?channel=&lt;your-channel-name&gt;&amp;name=&lt;your-in-game-name&gt;&amp;tag=&lt;your-tag&gt;&amp;region=&lt;your-region&gt;&amp;apiKey=HDEV-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>.</li> <li>Adjust the width and height of the browser source to fit your stream layout. (Recommended size: 800x600)</li> <li>Position the overlay on your stream layout where you want it to appear.</li> <li>Save the settings and start streaming!</li> </ol>"},{"location":"overlay-reference/rank-record/#additional-notes","title":"Additional Notes","text":"<ul> <li>The Rank-Record overlay is designed to display the player's current rank and MMR history during the stream. It calculates wins, losses, draws, and RR (Rank Rating) changes based on the stream's start time.</li> <li>If the player's rank or record is not available, the overlay will display a message indicating that the data is not available.</li> <li>If the player's rr change is negative, it will be displayed in red to indicate a decrease in RR. Similarly, if the rr change is positive, it will be displayed in green to indicate an increase in RR.</li> <li>The overlay is updated in real-time as the stream progresses, providing viewers with up-to-date information on the player's rank and performance. It may take a minute or two for the overlay to reflect changes after a match has ended.</li> </ul>"}]}